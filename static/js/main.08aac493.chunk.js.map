{"version":3,"sources":["images/icon_pokeball.svg","components/navbar/Navbar.js","components/pages/my-pokemon-list/MyPokemonList.js","graphql/queries.js","components/pokemon-card/PokemonCard.js","components/pages/pokemon-list/PokemonList.js","components/button/Button.js","components/pages/pokemon-detail/PokemonDetail.js","components/pages/error-page/ErrorPage.js","App.js","reportWebVitals.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","cx","cy","fill","r","_ref3","d","_ref4","height","width","x","y","_ref5","_ref6","_ref7","_ref8","SvgIconPokeball","_ref","svgRef","title","titleId","props","enableBackground","id","viewBox","xmlSpace","xmlns","xmlnsXlink","ref","ForwardRef","Navbar","useState","click","setClick","closeMobileMenu","Provider","value","color","className","exact","to","onClick","activeClassName","MyPokemonList","GET_POKEMONS","gql","GET_POKEMON_DETAIL","PokemonCard","pokemon","name","src","image","alt","PokemonList","webData","setWebData","loadingState","setLoadingState","useLazyQuery","nextPokemons","data","loading","useEffect","localPokemon","localStorage","getItem","localOffset","JSON","parse","console","log","variables","limit","offset","prevPokemons","updatedPokemons","forEach","p","push","pokemons","results","nextOffset","setItem","stringify","map","loadMore","Button","text","PokemonDetail","useParams","setPokemon","getPokemon","sprites","front_default","weight","abilities","ab","ability","types","type","ErrorPage","css","errorLink","onError","graphqlErrors","networkError","message","location","path","alert","link","from","HttpLink","uri","client","ApolloClient","cache","InMemoryCache","App","basename","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08aac493.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 256,\n  cy: 256.001,\n  fill: \"#040403\",\n  r: 249.766\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M490.017,254c0,129.243-104.772,234.017-234.017,234.017S21.983,383.243,21.983,254\",\n  fill: \"#E0E4E8\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21.983,258C21.983,128.756,126.756,23.983,256,23.983S490.017,128.756,490.017,258\",\n  fill: \"#E64C3C\"\n}));\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"rect\", {\n  fill: \"#040404\",\n  height: 107,\n  width: 484,\n  x: 14,\n  y: 203\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 256,\n  cy: 256,\n  r: 123.772\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 256,\n  cy: 256,\n  fill: \"#E0E4E8\",\n  r: 75.024\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 256,\n  cy: 256,\n  r: 51.025\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 256,\n  cy: 256,\n  fill: \"#E0E4E8\",\n  r: 36.026\n});\n\nfunction SvgIconPokeball(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 512 512\",\n    height: \"512px\",\n    id: \"Layer_1\",\n    viewBox: \"0 0 512 512\",\n    width: \"512px\",\n    xmlSpace: \"preserve\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconPokeball);\nexport default __webpack_public_path__ + \"static/media/icon_pokeball.d7c5a90e.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FaBars, FaTimes } from \"react-icons/fa\";\r\nimport { IconContext} from 'react-icons/lib';\r\nimport { ReactComponent as Logo } from '../../images/icon_pokeball.svg';\r\n\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n    const [click, setClick]  = useState(false);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n\r\n    return (\r\n        <>\r\n        <IconContext.Provider value={{ color: '#fff'}}>\r\n            <div className=\"navbar\">\r\n                <div className=\"navbar-container container\">\r\n                    <NavLink className=\"navbar-logo\" exact to='/' onClick={closeMobileMenu}>\r\n                        <Logo className=\"nav-icon\" />\r\n                        Pokemon\r\n                    </NavLink>\r\n                    <div className=\"menu-icon\" onClick={handleClick} >\r\n                        {click ? <FaTimes /> : <FaBars />}\r\n                    </div>\r\n                    <ul className={click ? 'nav-menu active': 'nav-menu'}>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink  exact to='/' className=\"nav-links\"  activeClassName='is-active' onClick={closeMobileMenu}>\r\n                                Poke`dex\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to='/my-pokemon' className=\"nav-links\" activeClassName='is-active' onClick={closeMobileMenu}>\r\n                                MyPokemon\r\n                            </NavLink>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <NavLink to='/pokemon-detail' className=\"nav-links\"  activeClassName='is-active' onClick={closeMobileMenu}>\r\n                                Pokemon Detail\r\n                            </NavLink>\r\n                        </li> */}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            </IconContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\n\r\nfunction MyPokemonList() {\r\n    return (\r\n        <>\r\n            <div className='container'>\r\n            MyPokemonList\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyPokemonList\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_POKEMONS = gql`\r\n    query pokemons($limit: Int, $offset: Int) {\r\n        pokemons(limit: $limit, offset: $offset) {\r\n            count\r\n            next\r\n            previous\r\n            nextOffset\r\n            prevOffset\r\n            status\r\n            message\r\n            results {\r\n                id\r\n                url\r\n                name\r\n                image\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const GET_POKEMON_DETAIL = gql `\r\n    query pokemon($name: String!) {\r\n        pokemon(name: $name) {\r\n            id\r\n            name\r\n            weight\r\n            height\r\n            sprites {\r\n                front_default\r\n            }\r\n            abilities {\r\n                ability {\r\n                    name\r\n                    url\r\n                }\r\n            }\r\n            types {\r\n                type {\r\n                    name\r\n                    url\r\n                }\r\n            }\r\n        }\r\n    }\r\n`","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport \"./PokemonCard.css\";\r\n\r\nfunction PokemonCard({ pokemon }) {\r\n    const total = 100;\r\n    \r\n    return (\r\n        <Link  to={'/pokemon-detail/' + pokemon.name} className=\"card\">\r\n                <div className=\"pokemon-image-container\">\r\n                    <img src={pokemon.image} alt={pokemon.name} className=\"pokemon-image\"/>\r\n                </div>\r\n                <div className=\"pokemon-info\">\r\n                    <p className=\"pokemon-id\">#{pokemon.id}</p>\r\n                    <p className=\"pokemon-name\">{pokemon.name}</p>\r\n                    <p className=\"pokemon-owned\"> owned: {total}</p>\r\n                </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default PokemonCard\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GET_POKEMONS } from \"../../../graphql/queries\";\r\nimport PokemonCard from \"../../pokemon-card/PokemonCard\";\r\n\r\nimport \"./PokemonList.css\";\r\n\r\n\r\nfunction PokemonList() {\r\n    const [webData, setWebData] = useState();\r\n    const [loadingState, setLoadingState] = useState(true);\r\n    const [nextPokemons, { loading, data }] = useLazyQuery(GET_POKEMONS);\r\n\r\n    useEffect(() => {\r\n        const localPokemon = localStorage.getItem('pokemon-data');\r\n        const localOffset = localStorage.getItem('pokemon-data-offset');\r\n        const d = [];\r\n        \r\n        if (localPokemon) {\r\n            d[0] = JSON.parse(localPokemon);\r\n        }\r\n        if (localOffset) {\r\n            d[1] = JSON.parse(localOffset);\r\n        }\r\n\r\n        if(d.length > 0) {\r\n            console.log(d);\r\n            setWebData(d);\r\n        } \r\n\r\n        if (!localOffset && loadingState) {\r\n            nextPokemons({ variables: { limit: 20, offset: 0} });\r\n        }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (data && loadingState) {\r\n\r\n            let prevPokemons = (webData ? webData[0]: null);\r\n            let updatedPokemons = [];\r\n\r\n            if(prevPokemons) {\r\n                prevPokemons.forEach(p => {\r\n                    updatedPokemons.push(p)\r\n                });\r\n            }\r\n\r\n            data.pokemons.results.forEach(p => {\r\n                updatedPokemons.push(p)\r\n            })\r\n\r\n            const d = [];\r\n            d[0] = updatedPokemons;\r\n            d[1] = data.pokemons.nextOffset;\r\n\r\n            setWebData(d);\r\n        }\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (webData) {\r\n            localStorage.setItem('pokemon-data', JSON.stringify(webData[0]));\r\n            localStorage.setItem('pokemon-data-offset', JSON.stringify(webData[1]));\r\n            setLoadingState(false);\r\n        }\r\n    }, [webData])\r\n\r\n    function loadMore(offset) {\r\n        const localOffset = localStorage.getItem('pokemon-data-offset');\r\n\r\n        if (offset === JSON.parse(localOffset)) {\r\n            setLoadingState(true);\r\n            nextPokemons({ variables: { limit: 20, offset:  offset} });\r\n        } else {\r\n            const localPokemon = localStorage.getItem('pokemon-data');\r\n            const localOffset = localStorage.getItem('pokemon-data-offset');\r\n            const d = [];\r\n            d[0] = JSON.parse(localPokemon);\r\n            d[1] = JSON.parse(localOffset);\r\n\r\n            setWebData(d);\r\n        }\r\n    }\r\n\r\n    // if (loadingState) {\r\n    //     return <h1> Loading... </h1> ;\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid-container\"> \r\n                { webData ? \r\n                    <>\r\n                    {webData[0].map((pokemon) => {\r\n                        return <PokemonCard key={pokemon.id} pokemon={pokemon} />\r\n                    })}\r\n                    </>\r\n                : null\r\n                } \r\n            </div> \r\n\r\n            { !loadingState ?\r\n                <div className=\"btn\">\r\n                    <button onClick={() => loadMore(webData[1])}>Load More</button>\r\n                </div> : <h1>Loading...</h1>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokemonList\r\n","import React from 'react';\r\nimport \"./Button.css\";\r\n\r\nfunction Button({text}) {\r\n\r\n    return (\r\n        <button className=\"btn-catch\">{text}</button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from'react-router-dom';\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GET_POKEMON_DETAIL } from \"../../../graphql/queries\";\r\n\r\nimport Button from \"../../button/Button\";\r\n\r\nimport \"./PokemonDetail.css\";\r\nimport \"./PokemonType.css\";\r\n\r\n\r\nfunction PokemonDetail() {\r\n    let { name } = useParams();\r\n\r\n    const [pokemon, setPokemon] = useState();\r\n    const [loadingState, setLoadingState] = useState(true);\r\n    const [getPokemon, { loading, data }] = useLazyQuery(GET_POKEMON_DETAIL, { variables: { name: name} });\r\n\r\n    useEffect(() => {\r\n        setLoadingState(true);\r\n        getPokemon();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if (data && loadingState) {\r\n            setPokemon(data.pokemon);\r\n        }\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (pokemon) {\r\n            console.log(pokemon);\r\n            setLoadingState(false);\r\n        }\r\n    }, [pokemon])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='p-detail-page'>\r\n                {\r\n                    pokemon ? \r\n                    <>\r\n                        <div className=\"p-detail-header-container\">\r\n                            <span className=\"header-text\">\r\n                                {pokemon.name} &nbsp;\r\n                                <span className=\"header-id\">#{pokemon.id}</span> \r\n                            </span>                             \r\n                        </div>\r\n\r\n                        <div className=\"p-detail-container\">\r\n                            <div className=\"p-detail-image-container\">\r\n                                <img className=\"p-detail-image\" src={ pokemon.sprites.front_default } alt=\"image\"/>\r\n                                <div className=\"catch-pokemon\">\r\n                                    <Button text=\"catch\"></Button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"p-detail-info-container\">\r\n                                    <div className=\"p-detail-info-box\">\r\n                                        <div className=\"p-detail-info-box-left\">\r\n                                            <div className=\"box-height\">\r\n                                                <span className=\"box-text-title\">Height</span>\r\n                                                <span className=\"box-text-value\">{pokemon.height} ft</span>\r\n                                            </div>\r\n                                            <div className=\"box-weight\">\r\n                                                <span className=\"box-text-title\">Weight</span>\r\n                                                <span className=\"box-text-value\">{pokemon.weight} lbs</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"p-detail-info-box-right\">\r\n                                            <div className=\"box-abilities\">\r\n                                                <span className=\"box-text-title\">Abilities</span>\r\n                                                <ul className=\"abilitiy\">\r\n                                                {\r\n                                                    pokemon.abilities.map((ab) => {\r\n                                                        return (\r\n                                                        <li key={ab.ability.name} className=\"box-text-value abilities\" >\r\n                                                            <span>{ab.ability.name}</span>\r\n                                                        </li>)\r\n                                                    })\r\n                                                }\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"p-detail-info-type-box\">\r\n                                        <span className=\"box-text-title\">Type</span>\r\n                                        {\r\n                                            pokemon.types.map((type) => {\r\n                                                return (\r\n                                                <div key={type.type.name} className={`type type-${type.type.name}`}>  \r\n                                                    <span>{type.type.name}</span>\r\n                                                </div>)\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <span>Loading..</span>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokemonDetail\r\n","import React from 'react';\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nimport \"./ErrorPage.css\";\r\n\r\nfunction ErrorPage() {\r\n    return (\r\n        <div css={css`\r\n        font-size: 5rem;\r\n        font-weigth: bold;\r\n        text-transform: uppercase;\r\n        text-align: center;\r\n        `} className=\"not-found\">\r\n            404 Not Found...\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorPage\r\n","import './App.css';\nimport  Navbar  from \"./components/navbar/Navbar\";\nimport React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  HttpLink,\n  from,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\n\nimport MyPokemonList from \"./components/pages/my-pokemon-list/MyPokemonList\";\nimport PokemonList from \"./components/pages/pokemon-list/PokemonList\";\nimport PokemonDetail from \"./components/pages/pokemon-detail/PokemonDetail\";\nimport ErrorPage from \"./components/pages/error-page/ErrorPage\";\n\n\n\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({ message, location, path }) => {\n      alert(`Graphql error ${message}`);\n      return null;\n    });\n  }\n});\n\nconst link = from([\n  errorLink,\n  new HttpLink({ uri: \"https://graphql-pokeapi.vercel.app/api/graphql\" }),\n]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link,\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n    <Router basename='/'>\n      <Navbar />\n        <div className=\"container page\">\n          <Switch >\n            <Route exact path='/' component={PokemonList} />\n            <Route path='/my-pokemon' component={MyPokemonList}/>\n            <Route path='/pokemon-detail/:name' component={PokemonDetail}/>\n            <Route exact path='*' component={ErrorPage} />\n          </Switch>\n        </div>\n    </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}