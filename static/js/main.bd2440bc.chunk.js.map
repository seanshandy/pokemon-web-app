{"version":3,"sources":["images/icon_pokeball.svg","components/navbar/Navbar.js","graphql/queries.js","components/pokemon-card/PokemonCard.js","components/button/Button.js","components/pages/pokedex/PokeDex.js","components/modal/Modal.js","components/pages/my-pokemons/MyPokemons.js","components/pages/pokemon-detail/PokemonDetail.js","components/pages/error-page/ErrorPage.js","App.js","reportWebVitals.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","cx","cy","fill","r","_ref3","d","_ref4","_ref5","_ref6","_ref7","SvgIconPokeball","_ref","svgRef","title","titleId","props","height","viewBox","width","xmlns","ref","id","ForwardRef","Navbar","useState","click","setClick","closeMobileMenu","Provider","value","color","className","exact","to","onClick","activeClassName","GET_POKEMONS","gql","GET_POKEMON_DETAIL","PokemonCard","pokemon","localPokemon","localStorage","getItem","isMypokemon","nickname","total","JSON","parse","forEach","p","name","src","image","alt","mypokemonid","Button","text","PokemonList","webData","setWebData","loadingState","setLoadingState","useLazyQuery","nextPokemons","error","loading","data","useEffect","localOffset","variables","limit","offset","console","log","prevPokemons","updatedPokemons","push","pokemons","results","nextOffset","setItem","stringify","map","loadMore","Modal","setNickname","show","e","undefined","catched","onClose","stopPropagation","handleClickOutside","body","onChange","event","trim","onSavedPokemon","release","onReleasePokemon","Mypokemons","setPokemons","showModal","setShowModal","deletePokemonID","pokemonData","splice","findIndex","PokemonDetail","history","useHistory","useParams","setPokemon","getPokemon","modalTitle","setModalTitle","modalBody","setModalBody","setCatched","path","oldPokemon","latestID","newPokemon","sprites","front_default","goBack","chance","Math","random","window","setTimeout","CatchPokemon","types","type","weight","abilities","ab","ability","ErrorPage","css","errorLink","onError","graphqlErrors","networkError","message","location","alert","link","from","HttpLink","uri","client","ApolloClient","cache","InMemoryCache","App","basename","component","PokeDex","MyPokemons","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd2440bc.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 32,\n  cy: 32,\n  fill: \"#57565c\",\n  r: 16\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m62 32a30 30 0 0 1 -60 0h14a16 16 0 0 0 32 0z\",\n  fill: \"#c6c5ca\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 32,\n  cy: 32,\n  fill: \"#c6c5ca\",\n  r: 10\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m62 32h-14a16 16 0 0 0 -32 0h-14a30 30 0 0 1 60 0z\",\n  fill: \"#d80027\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 32,\n  cy: 32,\n  fill: \"#cca400\",\n  r: 3\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"#231f20\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m32 1a31 31 0 1 0 31 31 31.035 31.035 0 0 0 -31-31zm0 2a29.03 29.03 0 0 1 28.975 28h-11.975c-.018 0-.033.009-.05.01a16.978 16.978 0 0 0 -33.9 0c-.017 0-.032-.01-.05-.01h-11.975a29.03 29.03 0 0 1 28.975-28zm15 29a15 15 0 1 1 -15-15 15.017 15.017 0 0 1 15 15zm-15 29a29.03 29.03 0 0 1 -28.975-28h11.975c.018 0 .033-.009.05-.01a16.978 16.978 0 0 0 33.9 0c.017 0 .032.01.05.01h11.975a29.03 29.03 0 0 1 -28.975 28z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m6.726 25.811a1 1 0 0 0 1.236-.687 24.788 24.788 0 0 1 .961-2.739 1 1 0 0 0 -1.846-.771 27.076 27.076 0 0 0 -1.039 2.961 1 1 0 0 0 .688 1.236z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m9.56 18.842a1 1 0 0 0 1.381-.3 24.927 24.927 0 0 1 21.059-11.542 1 1 0 0 0 0-2 26.921 26.921 0 0 0 -22.742 12.46 1 1 0 0 0 .302 1.382z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m32 21a11 11 0 1 0 11 11 11.013 11.013 0 0 0 -11-11zm0 20a9 9 0 1 1 9-9 9.01 9.01 0 0 1 -9 9z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m32 28a4 4 0 1 0 4 4 4 4 0 0 0 -4-4zm0 6a2 2 0 1 1 2-2 2 2 0 0 1 -2 2z\"\n}));\n\nfunction SvgIconPokeball(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 512,\n    viewBox: \"0 0 64 64\",\n    width: 512,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconPokeball);\nexport default __webpack_public_path__ + \"static/media/icon_pokeball.207f7b03.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FaBars, FaTimes } from \"react-icons/fa\";\r\nimport { IconContext} from 'react-icons/lib';\r\nimport { ReactComponent as Logo } from '../../images/icon_pokeball.svg';\r\n\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n    const [click, setClick]  = useState(false);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n\r\n    return (\r\n        <>\r\n        <IconContext.Provider value={{ color: '#fff'}}>\r\n            <div className=\"navbar\">\r\n                <div className=\"navbar-container container\">\r\n                    <NavLink className=\"navbar-logo\" exact to='/' onClick={closeMobileMenu}>\r\n                        <Logo className=\"nav-icon\" />\r\n                        Poke`mon\r\n                    </NavLink>\r\n                    <div className=\"menu-icon\" onClick={handleClick} >\r\n                        {click ? <FaTimes /> : <FaBars />}\r\n                    </div>\r\n                    <ul className={click ? 'nav-menu active': 'nav-menu'}>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink  exact to='/pokedex' className=\"nav-links\"  activeClassName='is-active' onClick={closeMobileMenu}>\r\n                                Poke`dex\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to='/mypokemons' className=\"nav-links\" activeClassName='is-active' onClick={closeMobileMenu}>\r\n                                MyPokemons\r\n                            </NavLink>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <NavLink  to={'/pokemon/' + pokemon.name} className=\"nav-links\"  activeClassName='is-active' onClick={closeMobileMenu}>\r\n                                Pokemon Detail\r\n                            </NavLink>\r\n                        </li> */}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            </IconContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_POKEMONS = gql`\r\n    query pokemons($limit: Int, $offset: Int) {\r\n        pokemons(limit: $limit, offset: $offset) {\r\n            count\r\n            next\r\n            previous\r\n            nextOffset\r\n            prevOffset\r\n            status\r\n            message\r\n            results {\r\n                id\r\n                name\r\n                image\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const GET_POKEMON_DETAIL = gql `\r\n    query pokemon($name: String!) {\r\n        pokemon(name: $name) {\r\n            id\r\n            name\r\n            weight\r\n            height\r\n            sprites {\r\n                front_default\r\n            }\r\n            abilities {\r\n                ability {\r\n                    name\r\n                    url\r\n                }\r\n            }\r\n            types {\r\n                type {\r\n                    name\r\n                    url\r\n                }\r\n            }\r\n        }\r\n    }\r\n`","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./PokemonCard.css\";\r\n\r\n\r\nfunction PokemonCard({ pokemon }) {\r\n    const localPokemon = localStorage.getItem('my-pokemon');\r\n    const isMypokemon = pokemon.nickname ? true : false;\r\n    let total = 0;\r\n        \r\n    if(!isMypokemon && localPokemon) {\r\n        JSON.parse(localPokemon).forEach((p) => {\r\n            if(p.id === pokemon.id){\r\n                total++;\r\n            }\r\n        })\r\n    } else {\r\n        total = 0;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to={'/pokemon/' + pokemon.name + (isMypokemon ? '/' + pokemon.nickname : '')} className=\"card\">\r\n                <div className=\"pokemon-image-container\">\r\n                    <img src={pokemon.image} alt={pokemon.name} className=\"pokemon-image\"/>\r\n                </div>\r\n                \r\n                <div className=\"pokemon-info\">\r\n                    <span className=\"pokemon-id\">#{pokemon.id}</span>\r\n                    {\r\n                        (isMypokemon? ( <span className=\"pokemon-nickname\">{pokemon.nickname}</span> ): null)\r\n                    }\r\n                    <span className=\"pokemon-name\">{pokemon.name}</span>\r\n                    {\r\n                        (!isMypokemon ? ( \r\n                            <>\r\n                            <span className=\"pokemon-owned\">owned:</span> <span className={`pokemon-total ${total > 0 ? \"owned\" : \"not-owned\"}`}>{total}</span> \r\n                            </>\r\n                        ): null)\r\n                    }\r\n                </div>\r\n                \r\n                {\r\n                    (isMypokemon ? ( <span className=\"mypokemon-id\">{pokemon.mypokemonid}</span> ): null)\r\n                }\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokemonCard\r\n","import React from 'react';\r\nimport \"./Button.css\";\r\n\r\nfunction Button({text}) {\r\n\r\n    return (\r\n        <button className=\"btn\">{text}</button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GET_POKEMONS } from \"../../../graphql/queries\";\r\nimport PokemonCard from \"../../pokemon-card/PokemonCard\";\r\n\r\nimport \"./PokeDex.css\";\r\nimport Button from \"../../button/Button\";\r\n\r\n\r\nfunction PokemonList() {\r\n    const [webData, setWebData] = useState([]);\r\n    const [loadingState, setLoadingState] = useState(true);\r\n    const [nextPokemons, { loading, error, data }] = useLazyQuery(GET_POKEMONS);\r\n\r\n    useEffect(() => {\r\n        const localPokemon = localStorage.getItem('pokemon-data');\r\n        const localOffset = localStorage.getItem('pokemon-data-offset');\r\n        const d = [];\r\n        \r\n        if (localPokemon) {\r\n            d[0] = JSON.parse(localPokemon);\r\n        }\r\n        if (localOffset) {\r\n            d[1] = JSON.parse(localOffset);\r\n        }\r\n\r\n        if(d.length > 0) {\r\n            setWebData(d);\r\n        } \r\n\r\n        if (!localOffset && loadingState) {\r\n            nextPokemons({ variables: { limit: 5, offset: 0} });\r\n        }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log('aaaaaa');\r\n        if (data && loadingState) {\r\n            let prevPokemons = (webData.length > 0 ? webData[0]: []);\r\n            let updatedPokemons = [];\r\n\r\n            if(prevPokemons.length > 0) {\r\n                prevPokemons.forEach(p => {\r\n                    updatedPokemons.push(p)\r\n                });\r\n            }\r\n\r\n            data.pokemons.results.forEach(p => {\r\n                updatedPokemons.push(p)\r\n            })\r\n\r\n            const d = [];\r\n            d[0] = updatedPokemons;\r\n            d[1] = data.pokemons.nextOffset;\r\n\r\n            setWebData(d);\r\n        }\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (webData.length > 0) {\r\n            console.log(webData);\r\n            localStorage.setItem('pokemon-data', JSON.stringify(webData[0]));\r\n            localStorage.setItem('pokemon-data-offset', JSON.stringify(webData[1]));\r\n            setLoadingState(false);\r\n        }\r\n    }, [webData])\r\n\r\n    function loadMore(offset) {\r\n        const localOffset = localStorage.getItem('pokemon-data-offset');\r\n\r\n        if (offset === JSON.parse(localOffset)) {\r\n            setLoadingState(true);\r\n            nextPokemons({ variables: { limit: 20, offset:  offset} });\r\n        } else {\r\n            const localPokemon = localStorage.getItem('pokemon-data');\r\n            const localOffset = localStorage.getItem('pokemon-data-offset');\r\n            const d = [];\r\n            d[0] = JSON.parse(localPokemon);\r\n            d[1] = JSON.parse(localOffset);\r\n\r\n            setWebData(d);\r\n        }\r\n    }\r\n\r\n    if (error) {\r\n        return <h1> Error fetching data from </h1> ;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid-container\"> \r\n                { webData.length > 0 ? \r\n                    <>\r\n                    {webData[0].map((pokemon) => {\r\n                        return <PokemonCard key={pokemon.id} pokemon={pokemon} />\r\n                    })}\r\n                    </>\r\n                : null\r\n                } \r\n            </div> \r\n\r\n            { !loadingState ?\r\n                <div className=\"load-more\" onClick={() => loadMore(webData[1])}>\r\n                    <Button text=\"load more\"></Button>\r\n                </div> : <h1>Loading...</h1>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokemonList\r\n","import React, { useEffect, useState } from 'react'\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = props => {\r\n    const [nickname, setNickname] = useState('');\r\n\r\n    function savePokemon(name) {\r\n        name.trim() === '' ? props.onSavedPokemon('-') : \r\n        props.onSavedPokemon(name.trim()); \r\n    }\r\n\r\n    function releasePokemon() {\r\n        props.onReleasePokemon(); \r\n    }\r\n\r\n    function handleChange(event) {\r\n        setNickname(event.target.value);\r\n    }\r\n\r\n    function handleClickOutside(e) {\r\n        if (props.catched != undefined || props.catched === true) {\r\n            e.stopPropagation();\r\n        } else {\r\n            return props.onClose();\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`modal ${props.show ? 'show' : ''} )`} onClick={(e) => handleClickOutside(e)}>\r\n                <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n                    <div className=\"modal-header\">\r\n                        <h4>{props.title}</h4>\r\n                    </div>\r\n                    \r\n                    <div className=\"modal-body\">\r\n                        {props.body}\r\n                        {\r\n                            props.catched ? <textarea value={nickname} onChange={handleChange} /> : null\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"modal-footer\">\r\n                        <>\r\n                            {\r\n                                props.catched ? <button className=\"btn-modal\" onClick={() => savePokemon(nickname)}>Submit</button> : \r\n                                (props.release ? null : <button className=\"btn-modal\" onClick={props.onClose}>Close</button>)\r\n                            }\r\n                            {\r\n                                props.release ? \r\n                                <>\r\n                                <button className=\"btn-modal\" onClick={() => releasePokemon()}>Submit</button>\r\n                                <button className=\"btn-modal\" onClick={props.onClose}>Cancel</button> \r\n                                </>: null\r\n                            }\r\n                        </>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useEffect, useState } from 'react';\r\nimport { FaSignOutAlt } from \"react-icons/fa\";\r\nimport { IconContext } from 'react-icons/lib';\r\n\r\nimport PokemonCard from \"../../pokemon-card/PokemonCard\";\r\nimport Modal from \"../../modal/Modal\";\r\nimport \"./MyPokemons.css\";\r\n\r\n\r\nfunction Mypokemons() {\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const [loadingState, setLoadingState] = useState(true);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalTitle, setModalTitle] = useState();\r\n    let deletePokemonID = 0;\r\n    const localPokemon = localStorage.getItem('my-pokemon') ? localStorage.getItem('my-pokemon') : [];\r\n    let pokemonData = localPokemon.length > 0 ? JSON.parse(localPokemon) : [];\r\n\r\n    useEffect(() => {\r\n        if(pokemonData.length > 0) {\r\n            setPokemons(pokemonData);\r\n        } \r\n        setLoadingState(false);\r\n    }, []);\r\n\r\n    function ReleasePokemon () {\r\n        pokemonData.splice(pokemonData.findIndex(p => p.mypokemonid === deletePokemonID ),1);\r\n        localStorage.setItem('my-pokemon', JSON.stringify(pokemonData));\r\n        setPokemons(pokemonData);\r\n\r\n        setLoadingState(false);\r\n        setShowModal(false);\r\n    }\r\n\r\n    function deletePokemon (mypokemonid) {\r\n        setLoadingState(true);\r\n\r\n        deletePokemonID = mypokemonid;\r\n        setShowModal(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    }, [loadingState])\r\n\r\n    useEffect(() => {\r\n        if(!showModal) {\r\n            setLoadingState(false);\r\n        }\r\n    }, [showModal])\r\n\r\n    return (\r\n        <>\r\n        <div className=\"grid-container\"> \r\n        <Modal title={'Release Pokemon'} body={'Are you sure want to release this Pokemon?'} show={showModal} onClose={() => setShowModal(false)} onReleasePokemon={ReleasePokemon} release=\"release\" />\r\n        \r\n        {\r\n            loadingState ? <h1>Loading...</h1> :\r\n            pokemons.length > 0 ?\r\n            pokemons.map((pokemon) => {\r\n                return (<div className=\"card-container\" key={pokemon.mypokemonid}>\r\n                    <PokemonCard pokemon={pokemon} />\r\n                    <div className=\"icon-release-box\" onClick={() => deletePokemon(pokemon.mypokemonid)}>\r\n                        <IconContext.Provider value={{ className:\"icon-release\" }}>\r\n                            <FaSignOutAlt />\r\n                        </IconContext.Provider>\r\n                    </div>\r\n                </div>)\r\n            }) : <h1>Let's Catch Some Pokemon!</h1>\r\n        }\r\n        </div> \r\n    </>\r\n    )\r\n}\r\n\r\nexport default Mypokemons\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from'react-router-dom';\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { FaArrowCircleLeft } from \"react-icons/fa\";\r\nimport { IconContext } from 'react-icons/lib';\r\nimport { GET_POKEMON_DETAIL } from \"../../../graphql/queries\";\r\n\r\nimport Button from \"../../button/Button\";\r\nimport Modal from \"../../modal/Modal\";\r\n\r\nimport \"./PokemonDetail.css\";\r\nimport \"./PokemonType.css\";\r\n\r\n\r\nfunction PokemonDetail() {\r\n    const history = useHistory();\r\n\r\n    let { name } = useParams();\r\n    let { nickname } = useParams();\r\n\r\n    const [pokemon, setPokemon] = useState();\r\n    const [loadingState, setLoadingState] = useState(true);\r\n    const [getPokemon, { loading, data }] = useLazyQuery(GET_POKEMON_DETAIL, { variables: { name: name} });\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalTitle, setModalTitle] = useState();\r\n    const [modalBody, setModalBody] = useState();\r\n    const [catched, setCatched] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setLoadingState(true);\r\n        getPokemon();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if (data && loadingState) {\r\n            setPokemon(data.pokemon);\r\n        }\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (pokemon) {\r\n            console.log(pokemon);\r\n            setLoadingState(false);\r\n        }\r\n    }, [pokemon])\r\n\r\n\r\n    function CatchPokemon() {\r\n        setLoadingState(true);\r\n        const chance = Math.random();\r\n\r\n        window.setTimeout(null, 1000);\r\n        \r\n        if(chance > 0.5) {\r\n            setModalTitle('Gotcha!');\r\n            setModalBody(\"Please enter a nick name\");\r\n            setCatched(true);\r\n            setShowModal(true);\r\n        } else {\r\n            setModalTitle(\"Oops\");\r\n            setModalBody(\"We've lost it, try again!\");\r\n            setCatched(false);\r\n            setShowModal(true);\r\n            setLoadingState(false);\r\n        }\r\n    }\r\n\r\n    \r\n    function SavePokemon (name) {\r\n        const localPokemon = localStorage.getItem('my-pokemon') ? localStorage.getItem('my-pokemon') : [];\r\n        const oldPokemon = localPokemon.length > 0? JSON.parse(localPokemon) : [];\r\n        const latestID = oldPokemon.length > 0 ? oldPokemon[oldPokemon.length - 1].mypokemonid + 1 : 1;\r\n\r\n        let newPokemon = [];\r\n\r\n        const data = {\r\n            id: pokemon.id,\r\n            name: pokemon.name,\r\n            image: pokemon.sprites.front_default,\r\n            mypokemonid: latestID,\r\n            nickname: name, \r\n        }\r\n        \r\n        if (latestID === 1) {\r\n            newPokemon.push(data);\r\n        } else {\r\n            newPokemon = oldPokemon;\r\n            newPokemon.push(data);\r\n        }\r\n\r\n        localStorage.setItem('my-pokemon', JSON.stringify(newPokemon));\r\n        setCatched(false);\r\n        setShowModal(false);\r\n\r\n        nextPath('/mypokemons');\r\n\r\n    }\r\n\r\n    function nextPath(path) {\r\n        history.push(path);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className='p-detail-page'>\r\n            <Modal title={modalTitle} body={modalBody} show={showModal} catched={catched} onClose={() => setShowModal(false)}  onSavedPokemon={SavePokemon} />\r\n            \r\n            {!loadingState && pokemon ? \r\n                <>\r\n                    <IconContext.Provider value={{ className:\"icon-back\" }}>\r\n                    <div onClick={() => history.goBack()} className=\"btn-back\">\r\n                        <FaArrowCircleLeft />\r\n                    </div>\r\n                    </IconContext.Provider>\r\n                    <div className=\"p-detail-header-container\">\r\n                        <span className=\"header-text\">\r\n                            {pokemon.name} &nbsp;\r\n                            <span className=\"header-id\">#{pokemon.id}</span> \r\n                        </span>                             \r\n                    </div>\r\n\r\n                    <div className=\"p-detail-container\">\r\n                        <div className=\"p-detail-image-container\">\r\n                            <img className=\"p-detail-image\" src={ pokemon.sprites.front_default } alt=\"image\"/>\r\n                            {\r\n                                nickname ? <span className=\"nickname-text\">{nickname}</span> :\r\n                            <div className=\"catch-pokemon\" onClick={() => CatchPokemon(pokemon)}>\r\n                                <Button text=\"catch\"></Button>\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"p-detail-info-container\">\r\n                                <div className={`p-detail-info-box type-${pokemon.types[0].type.name}`}>\r\n                                    <div className=\"p-detail-info-box-left\">\r\n                                        <div className=\"box-height\">\r\n                                            <span className=\"box-text-title\">Height</span>\r\n                                            <span className=\"box-text-value\">{pokemon.height} ft</span>\r\n                                        </div>\r\n                                        <div className=\"box-weight\">\r\n                                            <span className=\"box-text-title\">Weight</span>\r\n                                            <span className=\"box-text-value\">{pokemon.weight} lbs</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"p-detail-info-box-right\">\r\n                                        <div className=\"box-abilities\">\r\n                                            <span className=\"box-text-title\">Abilities</span>\r\n                                            <ul className=\"abilitiy\">\r\n                                            {\r\n                                                pokemon.abilities.map((ab) => {\r\n                                                    return (\r\n                                                    <li key={ab.ability.name} className=\"box-text-value abilities\" >\r\n                                                        <span>{ab.ability.name}</span>\r\n                                                    </li>)\r\n                                                })\r\n                                            }\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"p-detail-info-type-box\">\r\n                                    <span className=\"box-text-title\">Type</span>\r\n                                    {\r\n                                        pokemon.types.map((type) => {\r\n                                            return (\r\n                                            <div key={type.type.name} className={`type type-${type.type.name}`}>  \r\n                                                <span className=\"type-value\">{type.type.name}</span>\r\n                                            </div>)\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                :\r\n                <span>Loading..</span>\r\n            }\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PokemonDetail\r\n","import React from 'react';\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nimport \"./ErrorPage.css\";\r\n\r\nfunction ErrorPage() {\r\n    return (\r\n        <div css={css`\r\n        font-size: 5rem;\r\n        font-weigth: bold;\r\n        text-transform: uppercase;\r\n        text-align: center;\r\n        `} className=\"not-found\">\r\n            404 Not Found...\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorPage\r\n","import './App.css';\nimport  Navbar  from \"./components/navbar/Navbar\";\nimport React from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  HttpLink,\n  from,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\n\nimport PokeDex from \"./components/pages/pokedex/PokeDex\";\nimport MyPokemons from \"./components/pages/my-pokemons/MyPokemons\";\nimport PokemonDetail from \"./components/pages/pokemon-detail/PokemonDetail\";\nimport ErrorPage from \"./components/pages/error-page/ErrorPage\";\n\n\n\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({ message, location, path }) => {\n      alert(`Graphql error ${message}`);\n      return null;\n    });\n  }\n});\n\nconst link = from([\n  errorLink,\n  new HttpLink({ uri: \"https://graphql-pokeapi.vercel.app/api/graphql\" }),\n]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link,\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n    <Router basename='/'>\n      <Navbar />\n        <div className=\"container page\">\n          <Switch >\n            <Route exact path='/'>\n              <Redirect to=\"/pokedex\" component={PokeDex}/>\n            </Route>\n            <Route exact path='/pokedex' component={PokeDex} />\n            <Route exact path='/mypokemons' component={MyPokemons}/>\n            <Route exact path='/pokemon/:name' component={PokemonDetail}/>\n            <Route exact path='/pokemon/:name/:nickname' component={PokemonDetail}/>\n            <Route exact path='*' component={ErrorPage} />\n          </Switch>\n        </div>\n    </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}