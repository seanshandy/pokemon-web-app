[{"D:\\react-project\\pokemon-web-app\\src\\index.js":"1","D:\\react-project\\pokemon-web-app\\src\\App.js":"2","D:\\react-project\\pokemon-web-app\\src\\reportWebVitals.js":"3","D:\\react-project\\pokemon-web-app\\src\\graphql\\queries.js":"4","D:\\react-project\\pokemon-web-app\\src\\components\\navbar\\Navbar.js":"5","D:\\react-project\\pokemon-web-app\\src\\components\\pages\\pokemon-detail\\PokemonDetail.js":"6","D:\\react-project\\pokemon-web-app\\src\\components\\pokemon-card\\PokemonCard.js":"7","D:\\react-project\\pokemon-web-app\\src\\components\\pages\\error-page\\ErrorPage.js":"8","D:\\react-project\\pokemon-web-app\\src\\components\\button\\Button.js":"9","D:\\react-project\\pokemon-web-app\\src\\components\\pages\\my-pokemons\\Mypokemons.js":"10","D:\\react-project\\pokemon-web-app\\src\\components\\pages\\pokedex\\PokeDex.js":"11","D:\\react-project\\pokemon-web-app\\src\\components\\pages\\my-pokemons\\MyPokemons.js":"12","D:\\react-project\\pokemon-web-app\\src\\components\\modal\\Modal.js":"13"},{"size":527,"mtime":1612339091934,"results":"14","hashOfConfig":"15"},{"size":2099,"mtime":1612530985471,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":989,"mtime":1612435635105,"results":"18","hashOfConfig":"15"},{"size":2178,"mtime":1612461558220,"results":"19","hashOfConfig":"15"},{"size":7441,"mtime":1612519184226,"results":"20","hashOfConfig":"15"},{"size":1826,"mtime":1612524010201,"results":"21","hashOfConfig":"15"},{"size":397,"mtime":1612497454642,"results":"22","hashOfConfig":"15"},{"size":209,"mtime":1612516054532,"results":"23","hashOfConfig":"15"},{"size":1042,"mtime":1612441655592,"results":"24","hashOfConfig":"15"},{"size":3130,"mtime":1612532350789,"results":"25","hashOfConfig":"15"},{"size":2881,"mtime":1612523950498,"results":"26","hashOfConfig":"15"},{"size":3105,"mtime":1612540898646,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"14vob7a",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react-project\\pokemon-web-app\\src\\index.js",[],["57","58"],"D:\\react-project\\pokemon-web-app\\src\\App.js",[],"D:\\react-project\\pokemon-web-app\\src\\reportWebVitals.js",[],"D:\\react-project\\pokemon-web-app\\src\\graphql\\queries.js",[],"D:\\react-project\\pokemon-web-app\\src\\components\\navbar\\Navbar.js",[],"D:\\react-project\\pokemon-web-app\\src\\components\\pages\\pokemon-detail\\PokemonDetail.js",["59","60"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from'react-router-dom';\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { FaArrowCircleLeft } from \"react-icons/fa\";\r\nimport { IconContext } from 'react-icons/lib';\r\nimport { GET_POKEMON_DETAIL } from \"../../../graphql/queries\";\r\n\r\nimport Button from \"../../button/Button\";\r\nimport Modal from \"../../modal/Modal\";\r\n\r\nimport \"./PokemonDetail.css\";\r\nimport \"./PokemonType.css\";\r\n\r\n\r\nfunction PokemonDetail() {\r\n    const history = useHistory();\r\n\r\n    let { name } = useParams();\r\n    let { nickname } = useParams();\r\n\r\n    const [pokemon, setPokemon] = useState();\r\n    const [loadingState, setLoadingState] = useState(true);\r\n    const [getPokemon, { data }] = useLazyQuery(GET_POKEMON_DETAIL, { variables: { name: name} });\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalTitle, setModalTitle] = useState();\r\n    const [modalBody, setModalBody] = useState();\r\n    const [catched, setCatched] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setLoadingState(true);\r\n        getPokemon();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if (data && loadingState) {\r\n            setPokemon(data.pokemon);\r\n        }\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (pokemon) {\r\n            setLoadingState(false);\r\n        }\r\n    }, [pokemon])\r\n\r\n\r\n    function CatchPokemon() {\r\n        const chance = Math.random();\r\n\r\n        window.setTimeout(null, 1000);\r\n        \r\n        if(chance > 0.5) {\r\n            setModalTitle('Gotcha!');\r\n            setModalBody(\"Give a nickname?\");\r\n            setCatched(true);\r\n            setShowModal(true);\r\n        } else {\r\n            setModalTitle(\"Oops\");\r\n            setModalBody(\"We've lost it, try again!\");\r\n            setCatched(false);\r\n            setShowModal(true);\r\n        }\r\n    }\r\n\r\n    \r\n    function SavePokemon (nickname) {\r\n        const newNickname = nickname !== '' ? nickname : pokemon.name;\r\n        const localPokemon = localStorage.getItem('my-pokemon') ? localStorage.getItem('my-pokemon') : [];\r\n        const oldPokemon = localPokemon.length > 0? JSON.parse(localPokemon) : [];\r\n        const latestID = oldPokemon.length > 0 ? oldPokemon[oldPokemon.length - 1].mypokemonid + 1 : 1;\r\n\r\n        let newPokemon = [];\r\n\r\n        const data = {\r\n            id: pokemon.id,\r\n            name: pokemon.name,\r\n            image: pokemon.sprites.front_default,\r\n            mypokemonid: latestID,\r\n            nickname: newNickname, \r\n        }\r\n        \r\n        if (latestID === 1) {\r\n            newPokemon.push(data);\r\n        } else {\r\n            newPokemon = oldPokemon;\r\n            newPokemon.push(data);\r\n        }\r\n\r\n        localStorage.setItem('my-pokemon', JSON.stringify(newPokemon));\r\n        setCatched(false);\r\n        setShowModal(false);\r\n        nextPath('/mypokemons');\r\n    }\r\n\r\n    function nextPath(path) {\r\n        history.push(path);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className='p-detail-page'>\r\n            <Modal title={modalTitle} body={modalBody} show={showModal} catched={catched} onClose={() => setShowModal(false)}  onSavedPokemon={SavePokemon} />\r\n            \r\n            {!loadingState && pokemon ? \r\n                <>\r\n                    <IconContext.Provider value={{ className:\"icon-back\" }}>\r\n                    <div onClick={() => history.goBack()} title=\"Go Back\" className=\"btn-back\">\r\n                        <FaArrowCircleLeft />\r\n                    </div>\r\n                    </IconContext.Provider>\r\n                    <div className=\"p-detail-header-container\">\r\n                        <span className=\"header-text\">\r\n                            {pokemon.name} &nbsp;\r\n                            <span className=\"header-id\">#{pokemon.id}</span> \r\n                        </span>                             \r\n                    </div>\r\n\r\n                    <div className=\"p-detail-container\">\r\n                        <div className=\"p-detail-img-container\">\r\n                            <img className=\"p-detail-img\" src={ pokemon.sprites.front_default } alt={pokemon.name}/>\r\n                            {\r\n                                nickname ? <span className=\"nickname-text\">{nickname}</span> :\r\n                            <div className=\"catch-pokemon\" onClick={() => CatchPokemon(pokemon)}>\r\n                                <Button text=\"catch\"></Button>\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"p-detail-info-container\">\r\n                                <div className={`p-detail-info-box type-${pokemon.types[0].type.name}`}>\r\n                                    <div className=\"p-detail-info-box-left\">\r\n                                        <div className=\"box-height\">\r\n                                            <span className=\"box-text-title\">Height</span>\r\n                                            <span className=\"box-text-value\">{pokemon.height} ft</span>\r\n                                        </div>\r\n                                        <div className=\"box-weight\">\r\n                                            <span className=\"box-text-title\">Weight</span>\r\n                                            <span className=\"box-text-value\">{pokemon.weight} lbs</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"p-detail-info-box-right\">\r\n                                        <div className=\"box-abilities\">\r\n                                            <span className=\"box-text-title\">Abilities</span>\r\n                                            <ul className=\"abilitiy\">\r\n                                            {\r\n                                                pokemon.abilities.map((ab) => {\r\n                                                    return (\r\n                                                    <li key={ab.ability.name} className=\"box-text-value abilities\" >\r\n                                                        {ab.ability.name}\r\n                                                    </li>)\r\n                                                })\r\n                                            }\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"p-detail-info-type-box\">\r\n                                    <span className=\"box-text-title\">Type</span>\r\n                                    {\r\n                                        pokemon.types.map((type) => {\r\n                                            return (\r\n                                            <div key={type.type.name} className={`type type-${type.type.name}`}>  \r\n                                                <span className=\"type-value\">{type.type.name}</span>\r\n                                            </div>)\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                :\r\n                <span>Loading..</span>\r\n            }\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PokemonDetail\r\n","D:\\react-project\\pokemon-web-app\\src\\components\\pokemon-card\\PokemonCard.js",[],"D:\\react-project\\pokemon-web-app\\src\\components\\pages\\error-page\\ErrorPage.js",[],"D:\\react-project\\pokemon-web-app\\src\\components\\button\\Button.js",[],"D:\\react-project\\pokemon-web-app\\src\\components\\pages\\my-pokemons\\Mypokemons.js",[],"D:\\react-project\\pokemon-web-app\\src\\components\\pages\\pokedex\\PokeDex.js",["61"],"import React, { useEffect, useState } from 'react';\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport {  useHistory } from'react-router-dom';\r\nimport { GET_POKEMONS } from \"../../../graphql/queries\";\r\n\r\nimport PokemonCard from \"../../pokemon-card/PokemonCard\";\r\nimport Button from \"../../button/Button\";\r\nimport Box from '../../../images/icon_box.png';\r\n\r\n\r\nimport \"./PokeDex.css\";\r\n\r\n\r\nfunction PokemonList() {\r\n    const history = useHistory();\r\n\r\n    const [webData, setWebData] = useState('');\r\n    const [loadingState, setLoadingState] = useState(true);\r\n    const [nextPokemons, { error, data }] = useLazyQuery(GET_POKEMONS);\r\n\r\n    const limit = 12;\r\n\r\n    function savetoLocal (data) {\r\n        localStorage.setItem('pokemon-last-offset', JSON.stringify(data.nextOffset));\r\n    }\r\n\r\n    function loadPokemons(offset) {\r\n        const offsett = Number(offset < limit ? 0 : offset);\r\n        setLoadingState(true);\r\n        nextPokemons({ variables: { limit: limit, offset: offsett} });\r\n    }\r\n\r\n    function toBox() {\r\n        history.push('/mypokemons');\r\n    }\r\n\r\n    useEffect(() => {\r\n        let localOffset = 0;\r\n        localOffset = localStorage.getItem('pokemon-last-offset');\r\n        const offset = localOffset !== null ? (JSON.parse(localOffset) - limit): 0;\r\n\r\n        setLoadingState(true);\r\n        loadPokemons(offset)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            setWebData(data.pokemons);\r\n        }\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (webData) {\r\n            savetoLocal(webData);\r\n            setLoadingState(false);\r\n        }\r\n    }, [webData])\r\n\r\n    // useEffect(() => {\r\n    //     return null;\r\n    // }, [loadingState])\r\n\r\n    if (error) {\r\n        return <h1> Error fetching data from </h1> ;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            !loadingState ?\r\n            <>\r\n            <div className=\"pagination\">\r\n                { webData.nextOffset-(limit*2) >= 0 ?\r\n                    <div className=\"btn-prev\" onClick={() => loadPokemons(webData.nextOffset-(limit*2))}>\r\n                        <Button text=\"prev\" size=\"size-modal\"></Button>\r\n                    </div> : null\r\n                }\r\n                <div className={`btn-next ${webData.nextOffset-(limit*2) < 0 ? 'single-btn': ''}`}onClick={() => loadPokemons(webData.nextOffset)}>\r\n                        <Button text=\"next\" size=\"size-modal\"></Button>\r\n                </div>\r\n            </div>\r\n            </> : <h1>Loading...</h1>\r\n        }\r\n            <div className=\"icon-box-container\" title=\"MyPokemons\" onClick={() => toBox()}>\r\n                <img src={Box} alt=\"box\" className=\"icon-box\"/>\r\n            </div>\r\n            <div className=\"grid-container\"> \r\n                { webData !== '' && !loadingState ? \r\n                    <>\r\n                    {webData.results.map((pokemon) => {\r\n                        return <PokemonCard key={pokemon.id} pokemon={pokemon} />\r\n                    })}\r\n                    </>\r\n                : null\r\n                } \r\n            </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokemonList\r\n","D:\\react-project\\pokemon-web-app\\src\\components\\pages\\my-pokemons\\MyPokemons.js",[],"D:\\react-project\\pokemon-web-app\\src\\components\\modal\\Modal.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":32,"column":8,"nodeType":"68","endLine":32,"endColumn":10,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"70","line":39,"column":8,"nodeType":"68","endLine":39,"endColumn":14,"suggestions":"71"},{"ruleId":"66","severity":1,"message":"72","line":44,"column":8,"nodeType":"68","endLine":44,"endColumn":10,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPokemon'. Either include it or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has a missing dependency: 'loadingState'. Either include it or remove the dependency array.",["77"],"React Hook useEffect has a missing dependency: 'loadPokemons'. Either include it or remove the dependency array.",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [getPokemon]",{"range":"85","text":"86"},"Update the dependencies array to be: [data, loadingState]",{"range":"87","text":"88"},"Update the dependencies array to be: [loadPokemons]",{"range":"89","text":"90"},[1119,1121],"[getPokemon]",[1246,1252],"[data, loadingState]",[1357,1359],"[loadPokemons]"]